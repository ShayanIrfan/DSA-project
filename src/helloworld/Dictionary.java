/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package helloworld;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JScrollBar;

/**
 *
 * @author ishay
 */
public class Dictionary extends javax.swing.JFrame {

    /**
     * Creates new form Dictionary
     */
    public Dictionary() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sp = new javax.swing.JScrollPane();
        list = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtResult = new javax.swing.JTextPane();
        txt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        sp.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        list.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        list.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listValueChanged(evt);
            }
        });
        sp.setViewportView(list);

        txtResult.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jScrollPane2.setViewportView(txtResult);

        txt.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI", 0, 40)); // NOI18N
        jLabel1.setText("Dictionary");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(sp, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(235, 235, 235)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(txt, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(sp, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private DefaultListModel<String> mod;
    private ArrayList<Node> arr;
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        mod = new DefaultListModel<>();
        list.setModel(mod);
        arr = new ArrayList<>();

        String[] words = {
            "consider", "minute",
            "accord", "evident", "practice", "intend", "concern", "commit", "issue", "approach", "establish", "utter",
            "conduct", "engage", "obtain", "scarce", "policy", "straight", "stock", "apparent", "property", "fancy",
            "concept", "court", "appoint", "passage", "vain", "instance", "coast", "project", "commission", "constant",
            "circumstances", "constitute", "level", "affect", "institute", "render", "appeal", "generate", "theory", "range",
            "campaign", "league", "labor", "confer", "grant", "dwell", "entertain", "contract", "earnest", "yield",
            "wander", "insist", "knight", "convince", "inspire", "convention", "skill", "harry", "financial", "reflect",
            "novel", "furnish", "compel", "venture", "territory", "temper", "bent", "intimate", "undertake", "majority",
            "assert", "crew", "chamber", "humble", "scheme", "keen", "liberal", "despair", "tide", "attitude",
            "justify", "flag", "merit", "manifest", "notion", "scale", "formal", "resource", "persist", "contempt",
            "tour", "plead", "weigh", "mode", "distinction", "inclined", "attribute", "exert", "oppress", "contend",
            "stake", "toil", "perish", "disposition", "rail", "cardinal", "boast", "advocate", "bestow", "allege",
            "notwithstanding", "lofty", "multitude", "steep", "heed", "modest", "partial", "apt", "esteem", "credible",
            "provoke", "tread", "ascertain", "fare", "cede", "perpetual", "decree", "contrive", "derived", "elaborate",
            "substantial", "frontier", "facile", "cite", "warrant", "sob", "rider", "dense", "afflict", "flourish", "ordain", "pious", "vex",
            "gravity", "suspended", "conspicuous", "retort",
            "jet", "bolt", "assent", "purse", "plus", "sanction", "proceeding", "exalt", "zoo"
        };

        String[] meaning = {
            "At the moment, artemisinin-based therapies are considered the best treatment, but cost about $10 per dose - far too much for impoverished communities.", "he minute stain on the document was not visible to the naked eye.", "The committee worked in accord on the bill, and it eventually passed.",
            "clearly revealed to the mind or the senses or judgment", "a customary way of operation or behavio", "have in mind as a purpose",
            "something that interests you because it is important", "perform an act, usually with a negative connotation", "some situation or event that is thought about",
            "move towards", "set up or found", "without qualification",
            "direct the course of; manage or control", "consume all of one's attention or time", "come into possession of",
            "deficient in quantity or number compared with the demand", "a plan of action adopted by an individual or social group", "successive, without a break",
            "capital raised by a corporation through the issue of shares", "clearly revealed to the mind or the senses or judgment", "a basic or essential attribute shared by members of a class",
            "imagine; conceive of; see in one's mind", "an abstract or general idea inferred from specific instances", "an assembly to conduct judicial business",
            "assign a duty, responsibility, or obligation to", "a section of text, particularly a section of medium length", "unproductive of success",
            "an occurrence of something", "the shore of a sea or ocean", "a planned undertaking",
            "a special group delegated to consider some matter", "a quantity that does not vary", "one's overall condition in life",
            "compose or represent", "a relative position or degree of value in a graded group", "have an influence upon",
            "set up or lay the groundwork for", "give an interpretation of", "be attractive to",
            "bring into existence", "a well-substantiated explanation of some aspect of the world", "a variety of different things or activities",
            "a race between candidates for elective office", "an association of sports teams that organizes matches", "any piece of work that is undertaken or attempted",
            "have a meeting in order to talk something over", "allow to have", "think moodily or anxiously about something",
            "provide amusement for", "a binding agreement that is enforceable by law", "characterized by a firm, sincere belief in one's opinions",
            "give or supply", "move or cause to move in a sinuous or circular course", "be emphatic or resolute and refuse to budge",
            "a person of noble birth trained to arms and chivalry", "make realize the truth or validity of something", "serve as the inciting cause of",
            "a large formal assembly", "an ability that has been acquired by training", "annoy continually or chronically",
            "involving fiscal matters", "show an image of", "an extended fictional work in prose",
            "provide with objects or articles that make a room usable", "force somebody to do something", "proceed somewhere despite the risk of possible dangers",
            "the geographical area under the jurisdiction of a state", "a characteristic state of feeling", "fixed in your purpose",
            "marked by close acquaintance, association, or familiarity", "enter upon an activity or enterprise", "more than half of the votes in an election",
            "declare or affirm solemnly and formally as true", "the people who work on a vehicle", "a natural or artificial enclosed space",
            "marked by meekness or modesty; not arrogant or prideful", "an elaborate and systematic plan of action", "demonstrating ability to recognize or draw fine distinctions",
            "having political views favoring reform and progress", "a state in which all hope is lost or absent", "the periodic rise and fall of the sea level",
            "a complex mental state involving beliefs and feelings", "show to be reasonable or provide adequate ground for", "a rectangular piece of cloth of distinctive design",
            "any admirable or beneficial attribute", "reveal its presence or make an appearance", "a general inclusive concept",
            "relative magnitude", "characteristic of or befitting a person in authority", "a new or reserve supply that can be drawn upon when needed",
            "continue to exist", "lack of respect accompanied by a feeling of intense dislike", "a route all the way around a particular place or area",
            "enter a defendant's answer", "be oppressive or burdensome", "how something is done or how it happens",
            "a discrimination between things as different", "at an angle to the horizontal or vertical position", "a quality belonging to or characteristic of an entity",
            "make a great effort at a mental or physical task", "come down on or keep down by unjust use of one's authority", "compete for something",
            "a strong wooden or metal post driven into the ground", "work hard", "pass from physical life",
            "your usual mood", "complain bitterly", "one of a group of prominent bishops in the Sacred College",
            "talk about oneself with excessive pride or self-regard", "a person who pleads for a person, cause, or idea", "present",
            "report or maintain", "despite anything to the contrary", "of imposing height; especially standing out above others",
            "a large indefinite number", "having a sharp inclination", "pay close attention to",
            "not large but sufficient in size or amount", "being or affecting only a segment", "naturally disposed toward",
            "the condition of being honore", "appearing to merit belief or acceptance", "provide the needed stimulus for",
            "a step in walking or running", "learn or discover with confidence", "proceed, get along, or succeed",
            "relinquish possession or control over", "continuing forever or indefinitely", "a legally binding command or decision",
            "make or work out a plan for; devise", "formed or developed from something else; not original", "marked by complexity and richness of detail",
            "real; having a material or factual existence", "a wilderness at the edge of a settled area of a country", "arrived at without due care or effort; lacking depth",
            "make reference to", "show to be reasonable or provide adequate ground for", "weep convulsively",
            "a traveler who actively sits and travels on an animal", "permitting little if any light to pass through", "cause physical pain or suffering in",
            "grow vigorously", "invest with ministerial or priestly authority", "having or showing or expressing reverence for a deity",
            "disturb, especially by minor irritations", "the force of attraction between all masses in the universe", "supported or kept from sinking or falling by buoyancy",
            "obvious to the eye or mind", "a quick reply to a question or remark", "an airplane powered by gas turbines",
            "run away", "agree or express agreement", "a sum spoken of as the contents of a money container", "the arithmetic operation of summing", "give authority or permission to", 
            "a sequence of steps by which legal judgments are invoked" , "praise, glorify, or honor", "collection of animals"
        };

        BinaryTree theTree = new BinaryTree();

        for (int i = 0; i < words.length; i++) {
            theTree.addNode(words[i], meaning[i]);
        }

        theTree.inOrderTraverseTree(theTree.root);
        System.out.println("....");
        ArrayList<Node> arrayList = theTree.preorderTraverseTree(theTree.root);

        Node arrNew[] = new Node[arrayList.size()];
        for (int i = 0; i < arrayList.size(); i++) {
            arrNew[i] = arrayList.get(i);
        }

        QuickSort obj = new QuickSort(arrNew);
        obj.quickSort(0, arrNew.length - 1);
        for (Node elem : obj.arr) {
            arr.add(elem);
            mod.addElement(elem.word);
        }
    }//GEN-LAST:event_formWindowOpened

    private void listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValueChanged
        // TODO add your handling code here:
        if (!list.isSelectionEmpty()) {
            int index = list.getSelectedIndex();
            txtResult.setText(arr.get(index).meaning);
        }
    }//GEN-LAST:event_listValueChanged

    private void txtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeyTyped
        // TODO add your handling code here:
        String text = txt.getText().trim();
        text += evt.getKeyChar();
        text = text.trim().toLowerCase();
        for (int i = 0; i < mod.size(); i++) {
            String val = "" + mod.getElementAt(i);
            val = val.toLowerCase();

            if ("".equals(text)) {
                txtResult.setText("");
                list.clearSelection();
                return;
            }
            if (val.startsWith(text)) {
                list.setSelectedIndex(i);
                JScrollBar sb = sp.getVerticalScrollBar();
                sb.setValue(i * 20);
                return;
            }
        }
        txtResult.setText("This word not found");
        list.clearSelection();
    }//GEN-LAST:event_txtKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dictionary.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dictionary().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> list;
    private javax.swing.JScrollPane sp;
    private javax.swing.JTextField txt;
    private javax.swing.JTextPane txtResult;
    // End of variables declaration//GEN-END:variables
}
